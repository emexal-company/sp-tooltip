{"version":3,"file":"tooltip.component.js","sourceRoot":"","sources":["../src/tooltip.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAG,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAGlD,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,IAAI;IAAjC;;QAGsC,QAAG,GAAY,KAAK,CAAC;QACrB,SAAI,GAAY,KAAK,CAAC;QACtB,UAAK,GAAY,KAAK,CAAC;QACvB,WAAM,GAAY,KAAK,CAAC;QACxB,SAAI,GAAY,KAAK,CAAC;QACtB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAY,KAAK,CAAC;QACvB,cAAS,GAAY,KAAK,CAAC;QAC3B,iBAAY,GAAY,KAAK,CAAC;QAC9B,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAC3B,UAAK,GAAW,EAAE,CAAC;IAKzD,CAAC;IAHW,MAAM;QACd,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;CACF,CAAA;AArBe,uBAAe,GAAG,CAAC,WAAW,CAAC,CAAC;AAEjB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;oCAA6B;AAC5B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;qCAA8B;AAC7B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAA+B;AAC9B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;uCAAgC;AAC/B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;qCAA8B;AAC7B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;wCAAiC;AAChC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;yCAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;yCAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;wCAAiC;AAChC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAA+B;AAC9B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;0CAAmC;AAClC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;6CAAsC;AACrC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;2CAAoC;AACnC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;0CAAmC;AAClC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sCAA4B;AAjB5C,OAAO;IADnB,aAAa,CAAC,YAAY,CAAC;GACf,OAAO,CAsBnB;SAtBY,OAAO","sourcesContent":["import { customElement,  property } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport labelStyles from './tooltip.styles';\r\nimport standardTemplate from './tooltip.template';\r\n\r\n@customElement('sp-tooltip')\r\nexport class Tooltip extends Base {\r\n  public static componentStyles = [labelStyles];\r\n\r\n  @property({ type: Boolean }) public top: boolean = false;\r\n  @property({ type: Boolean }) public left: boolean = false;\r\n  @property({ type: Boolean }) public right: boolean = false;\r\n  @property({ type: Boolean }) public bottom: boolean = false;\r\n  @property({ type: Boolean }) public info: boolean = false;\r\n  @property({ type: Boolean }) public topinfo: boolean = false;\r\n  @property({ type: Boolean }) public positive: boolean = false;\r\n  @property({ type: Boolean }) public negative: boolean = false;\r\n  @property({ type: Boolean }) public success: boolean = false;\r\n  @property({ type: Boolean }) public error: boolean = false;\r\n  @property({ type: Boolean }) public infoSmall: boolean = false;\r\n  @property({ type: Boolean }) public successSmall: boolean = false;\r\n  @property({ type: Boolean }) public alertSmall: boolean = false;\r\n  @property({ type: Boolean }) public helpSmall: boolean = false;\r\n  @property({ type: String })  public label: string = '';\r\n  \r\n  protected render() {\r\n    return standardTemplate.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-tooltip': Tooltip;\r\n  }\r\n}\r\n"]}